/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Edificio;

import com.sun.j3d.utils.universe.SimpleUniverse;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GraphicsConfiguration;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.HashMap;
import javax.media.j3d.BranchGroup;
import javax.media.j3d.Canvas3D;
import javax.media.j3d.Transform3D;
import javax.swing.JFrame;
import javax.vecmath.Vector3f;

/**
 *
 * @author jriva
 */
public class edificio extends javax.swing.JFrame implements KeyListener{
   private crearEscenaGrafica escena;
    private HashMap<Integer, Boolean> keyStates = new HashMap<>();
    private float velocidad = 0.2f;
    private Canvas3D lienzo;

    public edificio() {
        // Configuración básica del JFrame
        setTitle("Movimiento del Piso");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(800, 600);
        setLocationRelativeTo(null);

        // 1. Configurar Canvas3D
        GraphicsConfiguration config = SimpleUniverse.getPreferredConfiguration();
        lienzo = new Canvas3D(config);
        lienzo.setPreferredSize(new Dimension(800, 600));
        
        // 2. Configurar el layout y añadir el Canvas3D
        getContentPane().setLayout(new BorderLayout());
        getContentPane().add(lienzo, BorderLayout.CENTER);

        // 3. Crear la escena
        escena = new crearEscenaGrafica();

        // 4. Configurar el universo
        SimpleUniverse universo = new SimpleUniverse(lienzo);
        universo.getViewingPlatform().setNominalViewingTransform();
        universo.addBranchGraph(escena.objRaiz);

        // 5. Configurar controles de teclado
        lienzo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                keyStates.put(e.getKeyCode(), true);
            }

            @Override
            public void keyReleased(KeyEvent e) {
                keyStates.put(e.getKeyCode(), false);
            }
        });

        // 6. Hilo para el movimiento
        new Thread(() -> {
            while (true) {
                moverPiso();
                try { Thread.sleep(20); } catch (InterruptedException e) {}
            }
        }).start();

        // 7. Hacer visible
        pack();
        setVisible(true);
        lienzo.requestFocus(); // Importante para recibir eventos de teclado
    }

    private void moverPiso() {
        Transform3D t3d = new Transform3D();
        escena.tgPiso.getTransform(t3d);
        
        Vector3f posicion = new Vector3f();
        t3d.get(posicion);
        
        if (keyStates.getOrDefault(KeyEvent.VK_W, false)) posicion.z += velocidad;
        if (keyStates.getOrDefault(KeyEvent.VK_S, false)) posicion.z -= velocidad;
        if (keyStates.getOrDefault(KeyEvent.VK_A, false)) posicion.x += velocidad;
        if (keyStates.getOrDefault(KeyEvent.VK_D, false)) posicion.x -= velocidad;
        
        t3d.setTranslation(posicion);
        escena.tgPiso.setTransform(t3d);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(edificio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(edificio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(edificio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(edificio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new edificio().setVisible(true);
            }
        });
    }

    @Override
    public void keyTyped(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void keyPressed(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void keyReleased(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
